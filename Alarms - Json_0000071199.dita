<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2019, v.4002-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Inc?>
<concept id="AlarmsJson-A4617E57" xml:lang="en">
<title>Alarms</title>
<shortdesc>The <apiname>JsonAlarmRecipient</apiname> exports alarms
using the recipient&#x2019;s schema.</shortdesc>
<prolog>
<metadata><keywords><indexterm>alarms</indexterm></keywords></metadata>
</prolog>
<conbody>
<section><title>AlarmRecipient</title><p>Linking the alarm topic of
an alarm class into the route action of a <apiname>JsonAlarmRecipient</apiname
> triggers the generation of a new payload each time the alarm class
receives an alarm.</p><p>The <apiname>JsonAlarmRecipient</apiname
> comes with a nested schema whose payload output depends on the alarms
passed through from the parent recipient.</p><p>Queries, bound objects
and arrays, and/or properties can include present value data from
the station in the payload.</p><p>There are, however, some alarm-specific
data types you can include, notably the properties from a <keyword
conkeyref="wh_variables_n4/niagara"
conref="..\reuse\WH_SoftwareVariables_Tridium_N4_0000009934.dita#WHSoftwareVariablesTridium-9A3264AE/niagara"
></keyword> Alarm Record: BAlarmRecord</p><p>By including the unique
identifier in an outgoing message, an inbound payload can acknowledge
alarms.</p></section>
<section><title>Alarm Record Property</title><p>Only the <apiname
>JsonAlarmRecipient</apiname>&#x2019;s schema supports these alarm-related
properties. Adding each of these to the schema allows inclusion of
the selected alarm property in the output.</p><p>For example, the <parmname
>sourceState</parmname>, <parmname>uuid</parmname>, alarmClass etc.
As with other schema properties the name is determined by renaming
the property, for example <parmname></parmname><parmname>AlarmRecordProperty</parmname
> becomes <parmname>timestamp</parmname>.</p></section>
<section><title>BFormat Property</title><p>This property defines the
alarm data to be extracted from the <keyword
conkeyref="wh_variables_n4/niagara"
conref="..\reuse\WH_SoftwareVariables_Tridium_N4_0000009934.dita#WHSoftwareVariablesTridium-9A3264AE/niagara"
></keyword> alarm database. For example, if an engineer used the <apiname
>Metadata</apiname> property of an AlarmExt to record the location
of a point in the building, this could be fetched using alarmData.location
to include in the payload.</p></section>
</conbody>
</concept><?Pub Caret -2?>
