<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2019, v.4002-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="AlarmProcessing" xml:lang="en">
<title>Alarm management</title>
<shortdesc>The alarm process begins with the source of a condition
that triggers an alarm. After creating the alarm, the system routes
it to a recipient whose job it is to manage each alarm using the alarm
console.</shortdesc>
<prolog>
<metadata><keywords><indexterm>alarm<indexterm>processing</indexterm
></indexterm></keywords>
<prodinfo>
<prodname>Niagara</prodname>
<vrmlist><vrm version="3.8"/><vrm version="4.0"/></vrmlist>
</prodinfo>
</metadata>
</prolog>
<conbody><image href="..\graphic\alarmprocess_0000011513_0000006249.png"
scale="250"></image>
<p>This simple process provides highly specific and flexible alarming
life cycle management.</p>
<ol>
<li><p><b>Alarm creation</b></p><p>Alarms are generated by components
using an alarm extension. The alarm extensions create the alarm whenever
specified values are outside of normal range. Alarms are then handled
by the alarm service.</p></li>
<li><p><b>Alarm routing</b></p><p>In addition to allowing you to specify
the routing destinations (including archiving destinations, the alarm
service provides notification and acknowledgment properties:</p><ul>
<li><p><b>Notification</b></p><p>Alarms are routed to one or more
recipients based on the class of the alarm. This includes notification
by email, at the alarm console, on a lineprinter, or at one or more
remote stations.</p></li>
<li><p><b>Acknowledgment</b></p><p>Alarms may require a response from
those who are notified. If a required acknowledgment is not received
within an optionally-specified time, alarms can be escalated and re-routed
to other designated alarm recipients.</p></li>
</ul></li>
<li><p><b>Alarm management</b></p><p>Typically open alarms, (alarms
not yet acknowledged and/or acknowledged but not yet transitioned
back to normal) are managed using the alarm console. Open alarms can
be stored in records that are managed by the local alarm database
management interface, as they are often updated (through alarm transitions,
acknowledgement, adding notes, etc.) and viewed (via alarm console).</p
><p>In <keyword conkeyref="wh_variables_n4/niagara4.11"
conref="..\reuse\WH_SoftwareVariables_Tridium_N4_0000009934.dita#WHSoftwareVariablesTridium-9A3264AE/niagara4.11"
>N4.11</keyword> and later, there is added support for the Alarm Archive
feature in the Alarm Service. The Orion Archive Alarm Provider added
to the Alarm Service provides the mechanism to archive cleared and
closed alarms. This is useful for customers who need to store a large
number of alarms for historical and regulatory purposes. For more
details, see &#x201c;alarm-OrionArchiveAlarmProvider&#x201d; in the
&#x201c;Components&#x201d; section of the <ph
conkeyref="doctitles_drivers/docRdbmsN4"
conref="..\reuse\WH_DriverSWDocTitles-Tridium_N4_0000009935.dita#WHDriverSoftwareDocumentTitles-9A319330/docRdbmsN4"
>RDBMS Driver Guide</ph>.</p></li>
</ol>
</conbody>
</concept><?Pub Caret -2?>
