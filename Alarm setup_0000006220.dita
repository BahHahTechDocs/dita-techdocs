<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2019, v.4002-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="AlarmServiceSetup-AFDCA426" xml:lang="en">
<title>Alarm setup</title>
<shortdesc>Configuring a system to process alarms involves adding
an alarm extension to each point's property sheet. Alarm extensions
are contained in the <wintitle>alarm</wintitle> palette.</shortdesc>
<prolog>
<metadata><keywords><indexterm>AlarmService<indexterm>setting up</indexterm
></indexterm><indexterm>alarm extensions</indexterm></keywords>
<prodinfo>
<prodname>Niagara</prodname>
<vrmlist><vrm version="3.8"/><vrm version="4.0"/></vrmlist>
</prodinfo>
</metadata>
</prolog>
<conbody>
<p>An alarm extension on a point issues alarms to the AlarmService,
and updates the alarm record to reflect a state change when the parent
point goes back to a normal state. The extension also notifies the
point that an acknowledgment has been received.</p>
<p>These basic steps are required to set up the alarming process:</p>
<ol>
<li><p>Add the proper alarm extension to each component.</p><p>Alarm
extension types must match their parent component type. For example,
an <apiname>OutOfRangeAlarmExt</apiname> goes with a Numeric point
type and a <apiname>BooleanChangeOfStateAlarmExt</apiname> goes with
a Boolean point type.</p></li>
<li><p>Configure each point&#x2019;s alarm extension properties to
define when the point meets an alarm condition (is in an alarmed state). </p
></li>
<li><p>Setting up alarm routing by defining where an alarm record
is to be sent. This includes sending the alarm to the alarm console.</p
></li>
<li><p>Configuring capacity and other alarm management properties.</p
></li>
<li><p>Manage the alarm archive using the alarm archive management
tools.</p></li>
</ol>
</conbody>
</concept><?Pub Caret -2?>
